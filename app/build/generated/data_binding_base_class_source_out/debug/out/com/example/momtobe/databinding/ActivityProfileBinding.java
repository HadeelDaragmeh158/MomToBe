// Generated by view binder compiler. Do not edit!
package com.example.momtobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.momtobe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView proMotherName;

  @NonNull
  public final TextView proMotherNumberOfChildren;

  @NonNull
  public final TextView proMotherPhone;

  @NonNull
  public final Button proMyFavBlogs;

  @NonNull
  public final ImageView proProfilePicture;

  @NonNull
  public final Button proSettingsBtn;

  private ActivityProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView proMotherName, @NonNull TextView proMotherNumberOfChildren,
      @NonNull TextView proMotherPhone, @NonNull Button proMyFavBlogs,
      @NonNull ImageView proProfilePicture, @NonNull Button proSettingsBtn) {
    this.rootView = rootView;
    this.proMotherName = proMotherName;
    this.proMotherNumberOfChildren = proMotherNumberOfChildren;
    this.proMotherPhone = proMotherPhone;
    this.proMyFavBlogs = proMyFavBlogs;
    this.proProfilePicture = proProfilePicture;
    this.proSettingsBtn = proSettingsBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pro_mother_name;
      TextView proMotherName = ViewBindings.findChildViewById(rootView, id);
      if (proMotherName == null) {
        break missingId;
      }

      id = R.id.pro_mother_number_of_children;
      TextView proMotherNumberOfChildren = ViewBindings.findChildViewById(rootView, id);
      if (proMotherNumberOfChildren == null) {
        break missingId;
      }

      id = R.id.pro_mother_phone;
      TextView proMotherPhone = ViewBindings.findChildViewById(rootView, id);
      if (proMotherPhone == null) {
        break missingId;
      }

      id = R.id.pro_my_fav_blogs;
      Button proMyFavBlogs = ViewBindings.findChildViewById(rootView, id);
      if (proMyFavBlogs == null) {
        break missingId;
      }

      id = R.id.pro_profile_picture;
      ImageView proProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (proProfilePicture == null) {
        break missingId;
      }

      id = R.id.pro_settings_btn;
      Button proSettingsBtn = ViewBindings.findChildViewById(rootView, id);
      if (proSettingsBtn == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ConstraintLayout) rootView, proMotherName,
          proMotherNumberOfChildren, proMotherPhone, proMyFavBlogs, proProfilePicture,
          proSettingsBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

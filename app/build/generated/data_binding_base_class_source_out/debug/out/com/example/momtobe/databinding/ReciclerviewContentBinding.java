// Generated by view binder compiler. Do not edit!
package com.example.momtobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.momtobe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReciclerviewContentBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView blogArchiveAutherName;

  @NonNull
  public final TextView blogArchiveDesc;

  @NonNull
  public final TextView blogArchiveTitle;

  @NonNull
  public final ImageView blogFavoriteImg;

  private ReciclerviewContentBinding(@NonNull CardView rootView,
      @NonNull TextView blogArchiveAutherName, @NonNull TextView blogArchiveDesc,
      @NonNull TextView blogArchiveTitle, @NonNull ImageView blogFavoriteImg) {
    this.rootView = rootView;
    this.blogArchiveAutherName = blogArchiveAutherName;
    this.blogArchiveDesc = blogArchiveDesc;
    this.blogArchiveTitle = blogArchiveTitle;
    this.blogFavoriteImg = blogFavoriteImg;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReciclerviewContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReciclerviewContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reciclerview_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReciclerviewContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blog_archive_autherName;
      TextView blogArchiveAutherName = ViewBindings.findChildViewById(rootView, id);
      if (blogArchiveAutherName == null) {
        break missingId;
      }

      id = R.id.blog_archive_desc;
      TextView blogArchiveDesc = ViewBindings.findChildViewById(rootView, id);
      if (blogArchiveDesc == null) {
        break missingId;
      }

      id = R.id.blog_archive_title;
      TextView blogArchiveTitle = ViewBindings.findChildViewById(rootView, id);
      if (blogArchiveTitle == null) {
        break missingId;
      }

      id = R.id.blog_favorite_img;
      ImageView blogFavoriteImg = ViewBindings.findChildViewById(rootView, id);
      if (blogFavoriteImg == null) {
        break missingId;
      }

      return new ReciclerviewContentBinding((CardView) rootView, blogArchiveAutherName,
          blogArchiveDesc, blogArchiveTitle, blogFavoriteImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

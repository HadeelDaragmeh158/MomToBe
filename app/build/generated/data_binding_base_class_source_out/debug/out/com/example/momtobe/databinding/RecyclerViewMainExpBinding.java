// Generated by view binder compiler. Do not edit!
package com.example.momtobe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.momtobe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerViewMainExpBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RelativeLayout backgroundColor;

  @NonNull
  public final CardView motherCardview;

  @NonNull
  public final ImageView motherImage;

  @NonNull
  public final TextView motherTitle;

  private RecyclerViewMainExpBinding(@NonNull CardView rootView,
      @NonNull RelativeLayout backgroundColor, @NonNull CardView motherCardview,
      @NonNull ImageView motherImage, @NonNull TextView motherTitle) {
    this.rootView = rootView;
    this.backgroundColor = backgroundColor;
    this.motherCardview = motherCardview;
    this.motherImage = motherImage;
    this.motherTitle = motherTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerViewMainExpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerViewMainExpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_view_main_exp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerViewMainExpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background_color;
      RelativeLayout backgroundColor = ViewBindings.findChildViewById(rootView, id);
      if (backgroundColor == null) {
        break missingId;
      }

      CardView motherCardview = (CardView) rootView;

      id = R.id.mother_image;
      ImageView motherImage = ViewBindings.findChildViewById(rootView, id);
      if (motherImage == null) {
        break missingId;
      }

      id = R.id.mother_title;
      TextView motherTitle = ViewBindings.findChildViewById(rootView, id);
      if (motherTitle == null) {
        break missingId;
      }

      return new RecyclerViewMainExpBinding((CardView) rootView, backgroundColor, motherCardview,
          motherImage, motherTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

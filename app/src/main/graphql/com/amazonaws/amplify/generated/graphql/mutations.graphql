# this is an auto generated file. This will be overwritten
mutation CreateUser(
  $input: CreateUserInput!
  $condition: ModelUserConditionInput
) {
  createUser(input: $input, condition: $condition) {
    id
    name
    image
    numOfChildren
    phoneNumber
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    products {
      items {
        id
        title
        price
        description
        quantity
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userProductsId
      }
      nextToken
      startedAt
    }
    questions {
      items {
        id
        title
        description
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userQuestionsId
      }
      nextToken
      startedAt
    }
    experiences {
      items {
        id
        title
        description
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userExperiencesId
      }
      nextToken
      startedAt
    }
    blogs {
      items {
        id
        userID
        blogID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    addressUsersId
  }
}
mutation UpdateUser(
  $input: UpdateUserInput!
  $condition: ModelUserConditionInput
) {
  updateUser(input: $input, condition: $condition) {
    id
    name
    image
    numOfChildren
    phoneNumber
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    products {
      items {
        id
        title
        price
        description
        quantity
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userProductsId
      }
      nextToken
      startedAt
    }
    questions {
      items {
        id
        title
        description
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userQuestionsId
      }
      nextToken
      startedAt
    }
    experiences {
      items {
        id
        title
        description
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userExperiencesId
      }
      nextToken
      startedAt
    }
    blogs {
      items {
        id
        userID
        blogID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    addressUsersId
  }
}
mutation DeleteUser(
  $input: DeleteUserInput!
  $condition: ModelUserConditionInput
) {
  deleteUser(input: $input, condition: $condition) {
    id
    name
    image
    numOfChildren
    phoneNumber
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    products {
      items {
        id
        title
        price
        description
        quantity
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userProductsId
      }
      nextToken
      startedAt
    }
    questions {
      items {
        id
        title
        description
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userQuestionsId
      }
      nextToken
      startedAt
    }
    experiences {
      items {
        id
        title
        description
        image
        featured
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userExperiencesId
      }
      nextToken
      startedAt
    }
    blogs {
      items {
        id
        userID
        blogID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    addressUsersId
  }
}
mutation CreateComment(
  $input: CreateCommentInput!
  $condition: ModelCommentConditionInput
) {
  createComment(input: $input, condition: $condition) {
    id
    content
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userCommentsId
    questionCommentsId
    experienceCommentsId
    productCommentsId
  }
}
mutation UpdateComment(
  $input: UpdateCommentInput!
  $condition: ModelCommentConditionInput
) {
  updateComment(input: $input, condition: $condition) {
    id
    content
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userCommentsId
    questionCommentsId
    experienceCommentsId
    productCommentsId
  }
}
mutation DeleteComment(
  $input: DeleteCommentInput!
  $condition: ModelCommentConditionInput
) {
  deleteComment(input: $input, condition: $condition) {
    id
    content
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userCommentsId
    questionCommentsId
    experienceCommentsId
    productCommentsId
  }
}
mutation CreateAddress(
  $input: CreateAddressInput!
  $condition: ModelAddressConditionInput
) {
  createAddress(input: $input, condition: $condition) {
    id
    country
    city
    street
    postalCode
    users {
      items {
        id
        name
        image
        numOfChildren
        phoneNumber
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        addressUsersId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateAddress(
  $input: UpdateAddressInput!
  $condition: ModelAddressConditionInput
) {
  updateAddress(input: $input, condition: $condition) {
    id
    country
    city
    street
    postalCode
    users {
      items {
        id
        name
        image
        numOfChildren
        phoneNumber
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        addressUsersId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteAddress(
  $input: DeleteAddressInput!
  $condition: ModelAddressConditionInput
) {
  deleteAddress(input: $input, condition: $condition) {
    id
    country
    city
    street
    postalCode
    users {
      items {
        id
        name
        image
        numOfChildren
        phoneNumber
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        addressUsersId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateBlog(
  $input: CreateBlogInput!
  $condition: ModelBlogConditionInput
) {
  createBlog(input: $input, condition: $condition) {
    id
    title
    description
    image
    autherName
    featured
    categories {
      items {
        id
        blogID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    users {
      items {
        id
        userID
        blogID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateBlog(
  $input: UpdateBlogInput!
  $condition: ModelBlogConditionInput
) {
  updateBlog(input: $input, condition: $condition) {
    id
    title
    description
    image
    autherName
    featured
    categories {
      items {
        id
        blogID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    users {
      items {
        id
        userID
        blogID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteBlog(
  $input: DeleteBlogInput!
  $condition: ModelBlogConditionInput
) {
  deleteBlog(input: $input, condition: $condition) {
    id
    title
    description
    image
    autherName
    featured
    categories {
      items {
        id
        blogID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    users {
      items {
        id
        userID
        blogID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateQuestion(
  $input: CreateQuestionInput!
  $condition: ModelQuestionConditionInput
) {
  createQuestion(input: $input, condition: $condition) {
    id
    title
    description
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    categories {
      items {
        id
        questionID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userQuestionsId
  }
}
mutation UpdateQuestion(
  $input: UpdateQuestionInput!
  $condition: ModelQuestionConditionInput
) {
  updateQuestion(input: $input, condition: $condition) {
    id
    title
    description
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    categories {
      items {
        id
        questionID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userQuestionsId
  }
}
mutation DeleteQuestion(
  $input: DeleteQuestionInput!
  $condition: ModelQuestionConditionInput
) {
  deleteQuestion(input: $input, condition: $condition) {
    id
    title
    description
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    categories {
      items {
        id
        questionID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userQuestionsId
  }
}
mutation CreateExperience(
  $input: CreateExperienceInput!
  $condition: ModelExperienceConditionInput
) {
  createExperience(input: $input, condition: $condition) {
    id
    title
    description
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    categories {
      items {
        id
        experienceID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userExperiencesId
  }
}
mutation UpdateExperience(
  $input: UpdateExperienceInput!
  $condition: ModelExperienceConditionInput
) {
  updateExperience(input: $input, condition: $condition) {
    id
    title
    description
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    categories {
      items {
        id
        experienceID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userExperiencesId
  }
}
mutation DeleteExperience(
  $input: DeleteExperienceInput!
  $condition: ModelExperienceConditionInput
) {
  deleteExperience(input: $input, condition: $condition) {
    id
    title
    description
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    categories {
      items {
        id
        experienceID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userExperiencesId
  }
}
mutation CreateProduct(
  $input: CreateProductInput!
  $condition: ModelProductConditionInput
) {
  createProduct(input: $input, condition: $condition) {
    id
    title
    price
    description
    quantity
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userProductsId
  }
}
mutation UpdateProduct(
  $input: UpdateProductInput!
  $condition: ModelProductConditionInput
) {
  updateProduct(input: $input, condition: $condition) {
    id
    title
    price
    description
    quantity
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userProductsId
  }
}
mutation DeleteProduct(
  $input: DeleteProductInput!
  $condition: ModelProductConditionInput
) {
  deleteProduct(input: $input, condition: $condition) {
    id
    title
    price
    description
    quantity
    image
    featured
    comments {
      items {
        id
        content
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        userCommentsId
        questionCommentsId
        experienceCommentsId
        productCommentsId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userProductsId
  }
}
mutation CreateCategory(
  $input: CreateCategoryInput!
  $condition: ModelCategoryConditionInput
) {
  createCategory(input: $input, condition: $condition) {
    id
    title
    description
    experiences {
      items {
        id
        experienceID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    blogs {
      items {
        id
        blogID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    questions {
      items {
        id
        questionID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateCategory(
  $input: UpdateCategoryInput!
  $condition: ModelCategoryConditionInput
) {
  updateCategory(input: $input, condition: $condition) {
    id
    title
    description
    experiences {
      items {
        id
        experienceID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    blogs {
      items {
        id
        blogID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    questions {
      items {
        id
        questionID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteCategory(
  $input: DeleteCategoryInput!
  $condition: ModelCategoryConditionInput
) {
  deleteCategory(input: $input, condition: $condition) {
    id
    title
    description
    experiences {
      items {
        id
        experienceID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    blogs {
      items {
        id
        blogID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    questions {
      items {
        id
        questionID
        categoryID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateUserBlogs(
  $input: CreateUserBlogsInput!
  $condition: ModelUserBlogsConditionInput
) {
  createUserBlogs(input: $input, condition: $condition) {
    id
    userID
    blogID
    user {
      id
      name
      image
      numOfChildren
      phoneNumber
      comments {
        nextToken
        startedAt
      }
      products {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      addressUsersId
    }
    blog {
      id
      title
      description
      image
      autherName
      featured
      categories {
        nextToken
        startedAt
      }
      users {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateUserBlogs(
  $input: UpdateUserBlogsInput!
  $condition: ModelUserBlogsConditionInput
) {
  updateUserBlogs(input: $input, condition: $condition) {
    id
    userID
    blogID
    user {
      id
      name
      image
      numOfChildren
      phoneNumber
      comments {
        nextToken
        startedAt
      }
      products {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      addressUsersId
    }
    blog {
      id
      title
      description
      image
      autherName
      featured
      categories {
        nextToken
        startedAt
      }
      users {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteUserBlogs(
  $input: DeleteUserBlogsInput!
  $condition: ModelUserBlogsConditionInput
) {
  deleteUserBlogs(input: $input, condition: $condition) {
    id
    userID
    blogID
    user {
      id
      name
      image
      numOfChildren
      phoneNumber
      comments {
        nextToken
        startedAt
      }
      products {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      addressUsersId
    }
    blog {
      id
      title
      description
      image
      autherName
      featured
      categories {
        nextToken
        startedAt
      }
      users {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateBlogCategories(
  $input: CreateBlogCategoriesInput!
  $condition: ModelBlogCategoriesConditionInput
) {
  createBlogCategories(input: $input, condition: $condition) {
    id
    blogID
    categoryID
    blog {
      id
      title
      description
      image
      autherName
      featured
      categories {
        nextToken
        startedAt
      }
      users {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateBlogCategories(
  $input: UpdateBlogCategoriesInput!
  $condition: ModelBlogCategoriesConditionInput
) {
  updateBlogCategories(input: $input, condition: $condition) {
    id
    blogID
    categoryID
    blog {
      id
      title
      description
      image
      autherName
      featured
      categories {
        nextToken
        startedAt
      }
      users {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteBlogCategories(
  $input: DeleteBlogCategoriesInput!
  $condition: ModelBlogCategoriesConditionInput
) {
  deleteBlogCategories(input: $input, condition: $condition) {
    id
    blogID
    categoryID
    blog {
      id
      title
      description
      image
      autherName
      featured
      categories {
        nextToken
        startedAt
      }
      users {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateQuestionCategories(
  $input: CreateQuestionCategoriesInput!
  $condition: ModelQuestionCategoriesConditionInput
) {
  createQuestionCategories(input: $input, condition: $condition) {
    id
    questionID
    categoryID
    question {
      id
      title
      description
      image
      featured
      comments {
        nextToken
        startedAt
      }
      categories {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userQuestionsId
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateQuestionCategories(
  $input: UpdateQuestionCategoriesInput!
  $condition: ModelQuestionCategoriesConditionInput
) {
  updateQuestionCategories(input: $input, condition: $condition) {
    id
    questionID
    categoryID
    question {
      id
      title
      description
      image
      featured
      comments {
        nextToken
        startedAt
      }
      categories {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userQuestionsId
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteQuestionCategories(
  $input: DeleteQuestionCategoriesInput!
  $condition: ModelQuestionCategoriesConditionInput
) {
  deleteQuestionCategories(input: $input, condition: $condition) {
    id
    questionID
    categoryID
    question {
      id
      title
      description
      image
      featured
      comments {
        nextToken
        startedAt
      }
      categories {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userQuestionsId
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateExperienceCategories(
  $input: CreateExperienceCategoriesInput!
  $condition: ModelExperienceCategoriesConditionInput
) {
  createExperienceCategories(input: $input, condition: $condition) {
    id
    experienceID
    categoryID
    experience {
      id
      title
      description
      image
      featured
      comments {
        nextToken
        startedAt
      }
      categories {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userExperiencesId
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateExperienceCategories(
  $input: UpdateExperienceCategoriesInput!
  $condition: ModelExperienceCategoriesConditionInput
) {
  updateExperienceCategories(input: $input, condition: $condition) {
    id
    experienceID
    categoryID
    experience {
      id
      title
      description
      image
      featured
      comments {
        nextToken
        startedAt
      }
      categories {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userExperiencesId
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteExperienceCategories(
  $input: DeleteExperienceCategoriesInput!
  $condition: ModelExperienceCategoriesConditionInput
) {
  deleteExperienceCategories(input: $input, condition: $condition) {
    id
    experienceID
    categoryID
    experience {
      id
      title
      description
      image
      featured
      comments {
        nextToken
        startedAt
      }
      categories {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userExperiencesId
    }
    category {
      id
      title
      description
      experiences {
        nextToken
        startedAt
      }
      blogs {
        nextToken
        startedAt
      }
      questions {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
